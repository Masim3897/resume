name: CI/CD Pipeline

# Trigger the workflow on pushes to the 'main' branch
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'  # Specify your Python version here

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Run Django management commands (like collectstatic)
      - name: Collect static files
        run: |
          python manage.py collectstatic --noinput

      # Step 5: Linting (optional - check for errors in your Python code)
      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 . --exit-zero  # Allows CI to pass even with lint errors

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 1: Set up AWS credentials using GitHub Secrets
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Specify your AWS region here

      # Step 2: Deploy the project to AWS (e.g., S3 for static hosting)
      - name: Deploy static files to S3
        run: |
          aws s3 sync ./static s3://asim-bucket/static --acl public-read
